plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id ("kotlin-kapt")
    id ("dagger.hilt.android.plugin")
}

android {
    signingConfigs {
        release {
            storeFile file('/home/mary/nutri-keystore.jks')
            keyAlias 'nutrikey'
            storePassword '29012001'
            keyPassword '29012001'
        }
    }
    namespace 'com.example.nutri'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.nutri"
        minSdk 30
        targetSdk 33
        versionCode 3
        versionName "1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.release
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    def rx_version = "3.0.0"
    def work_version = "2.8.1"
    def room_version = "2.5.1"
    def retrofit_version = "2.9.0"
    def lifecycle_version = "2.6.1"

    implementation "com.squareup.retrofit2:converter-gson:2.5.0"

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")

    // Hilt
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // RxJava
    implementation "io.reactivex.rxjava3:rxjava:$rx_version"
    implementation "io.reactivex.rxjava3:rxandroid:$rx_version"
    // Room usage with RxJava
    implementation "androidx.room:room-rxjava3:$room_version"

    //JetpackCompose
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    implementation 'androidx.appcompat:appcompat:1.6.1'

    // Work
    implementation("androidx.work:work-runtime-ktx:$work_version")

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation "androidx.fragment:fragment-ktx:1.5.6"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.0'

    //Navigation
    implementation "androidx.navigation:navigation-compose:2.6.0-alpha09"
    implementation ("androidx.hilt:hilt-navigation-compose:1.0.0")

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"

    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"

    // Testing coroutines
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'

    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}

kapt {
    correctErrorTypes = true
}